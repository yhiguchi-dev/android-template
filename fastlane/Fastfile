# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs generate debug.keystore"
  lane :generate_debug_keystore do
    Dir.chdir("../scripts") do
      sh("./generate-keystore.sh")
    end
  end

  desc "Runs generate env"
  lane :generate_env do
    Dir.chdir("../") do
      sh("envsubst < ./env.gradle.template > ./env.gradle")
    end
  end

  desc "Runs format"
  lane :format do
    gradle(task: "spotlessApply")
  end

  desc "Runs lint"
  lane :lint do
    gradle(task: "lint spotlessCheck")
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "clean test testReport")
  end

  desc "Runs build debug"
  lane :build_debug do
    gradle(task: "clean bundleDebug")
  end

  desc "Runs build release"
  lane :build_release do
    gradle(task: "clean bundleRelease")
  end

  desc "My awesome app"
  lane :distribute do
    gradle(task: "clean bundleRelease")
    firebase_app_distribution(
      app: "1:123456789:android:abcd1234",
      testers: "tester1@company.com, tester2@company.com",
      release_notes: "Lots of amazing new features to test out!"
    )
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end
