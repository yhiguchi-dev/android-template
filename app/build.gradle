plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'org.jetbrains.dokka'
    id 'com.google.firebase.crashlytics'
    id 'com.diffplug.spotless'
}

android {
    apply from: '../env.gradle'

    def applicationVersionCode = getVersionCode(applicationVersion)

    compileSdk 31
    defaultConfig {
        applicationId applicationId
        minSdk 24
        targetSdk 31
        versionCode applicationVersionCode
        versionName applicationVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
        }
        release {
            storeFile file('release.keystore')
            storePassword keystorePassword
            keyAlias keyAlias
            keyPassword keyPassword
        }
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug-$buildDate"
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    lint {
        checkDependencies true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.navigation:navigation-compose:2.4.2'

    implementation platform('com.google.firebase:firebase-bom:30.1.0')

    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation project(':http')
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
    implementation 'com.google.android.gms:play-services-cronet:18.0.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    testImplementation 'org.jetbrains.kotlin:kotlin-reflect:1.6.21'
    testImplementation 'ch.qos.logback:logback-classic:1.2.11'
    testImplementation 'io.kotest:kotest-runner-junit5:5.2.2'
    testImplementation 'io.kotest:kotest-framework-concurrency:5.2.2'
    testImplementation 'io.kotest.extensions:kotest-extensions-wiremock:1.0.3'
    testImplementation 'io.mockk:mockk:1.12.4'
    testImplementation 'io.mockk:mockk-agent-jvm:1.12.4'

}

spotless {
    kotlin {
        target 'src/**/*.kt'
        ktlint('0.43.2').userData([android:'true', indent_size:'2'])
    }
}

dokkaHtml.configure {
    dokkaSourceSets {
        named('main') {
            noAndroidSdkLink.set(false)
        }
    }
}

static def getVersionCode(String version) {
    def versions = version.split('\\.')
    def major = versions[0].toInteger() * 1000 ** 2
    def minor = versions[1].toInteger() * 1000
    def patch = versions[2].toInteger()
    major + minor + patch
}
